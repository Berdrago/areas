{"version":3,"file":"src_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB5B;AACA;AACA;IAOaG,SAAS,SAATA,SAAS;EAEpBC,YAAoBC,OAApB,EACoBC,MADpB,EACkC;IADd;IACA;IAFpB,WAAI,oBAAJ;EAEwC;;EAClCC,OAAO,CAACC,KAAD,EAAQC,QAAR,EAAgB;IAAA;;IAAA;MAC3B,IAAG;QACD,MAAMC,IAAI,SAAS,KAAI,CAACL,OAAL,CAAaM,KAAb,CAAmBH,KAAK,CAACI,KAAzB,EAAgCH,QAAQ,CAACG,KAAzC,CAAnB;;QACA,IAAGF,IAAH,EAAQ;UACN,MAAMG,UAAU,GAAG,KAAI,CAACR,OAAL,CAAaS,eAAb,CAA6BJ,IAA7B,CAAnB;;UACA,KAAI,CAACK,YAAL,CAAkBF,UAAlB;;UACAG,OAAO,CAACC,GAAR,CAAYJ,UAAZ;UACAG,OAAO,CAACC,GAAR,CAAYP,IAAZ;QACD;MACF,CARD,CASA,OAAMQ,KAAN,EAAY;QACVF,OAAO,CAACC,GAAR,CAAYC,KAAZ;MACD;IAZ0B;EAa5B;;EACKC,aAAa;IAAA;;IAAA;MACjB,IAAG;QACD,MAAMT,IAAI,SAAS,MAAI,CAACL,OAAL,CAAae,WAAb,EAAnB;;QACA,IAAGV,IAAH,EAAQ;UACN,MAAMG,UAAU,GAAG,MAAI,CAACR,OAAL,CAAaS,eAAb,CAA6BJ,IAA7B,CAAnB;;UACA,MAAI,CAACK,YAAL,CAAkBF,UAAlB;;UACAG,OAAO,CAACC,GAAR,CAAYJ,UAAZ;UACAG,OAAO,CAACC,GAAR,CAAYP,IAAZ;QACD;MACF,CARD,CASA,OAAMQ,KAAN,EAAY;QACVF,OAAO,CAACC,GAAR,CAAYC,KAAZ;MACD;IAZgB;EAalB;;EACOH,YAAY,CAACF,UAAD,EAAoB;IACtC,IAAGA,UAAH,EAAc;MACZ,KAAKP,MAAL,CAAYe,QAAZ,CAAqB,CAAC,MAAD,CAArB;IACD,CAFD,MAEK;MACH,KAAKf,MAAL,CAAYe,QAAZ,CAAqB,CAAC,cAAD,CAArB;IACD;EACF;;AAtCmB;;;QAPbnB,+DAAWA;;QADXD,mDAAMA;;;AAQFE,SAAS,sDALrBH,wDAAS,CAAC;EACTsB,QAAQ,EAAE,WADD;EAETC,UAAAA,wDAFS;;AAAA,CAAD,CAKY,GAATpB,SAAS,CAAT","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage  {\n  img='/assets/SedePN.jpg'\n  constructor(private authSvc: AuthService,\n              private router: Router ) { }\n  async onLogin(email, password ){\n    try{\n      const user = await this.authSvc.login(email.value, password.value);\n      if(user){\n        const isVerified = this.authSvc.isEmailVerified(user);\n        this.redirectUser(isVerified);\n        console.log(isVerified);\n        console.log(user);\n      }\n    }\n    catch(error){\n      console.log(error);\n    }\n  };\n  async onLoginGoogle(){\n    try{\n      const user = await this.authSvc.loginGoogle();\n      if(user){\n        const isVerified = this.authSvc.isEmailVerified(user);\n        this.redirectUser(isVerified);\n        console.log(isVerified);\n        console.log(user);\n      }\n    }\n    catch(error){\n      console.log(error);\n    }\n  };\n  private redirectUser(isVerified: boolean){\n    if(isVerified){\n      this.router.navigate(['user']);\n    }else{\n      this.router.navigate(['verify-email']);\n    }\n  };\n\n}\n"],"names":["Component","Router","AuthService","LoginPage","constructor","authSvc","router","onLogin","email","password","user","login","value","isVerified","isEmailVerified","redirectUser","console","log","error","onLoginGoogle","loginGoogle","navigate","selector","template"],"sourceRoot":"webpack:///"}